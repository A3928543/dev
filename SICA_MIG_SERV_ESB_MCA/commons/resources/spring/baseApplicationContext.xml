<?xml version="1.0" encoding="UTF-8"?>

	<!--
		$Id: baseApplicationContext.xml,v 1.43 2006/07/14 23:54:16 jcordova
		Exp $
	-->

<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">



<beans>



	<!-- CONFIGURACION GENERAL -->

	<!-- Data source para la BUP y Seguridad -->

	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">

		<description>Data source para la BUP y Seguridad</description>

		<property name="jndiName">

			<value>ODSDataSource</value>

		</property>

	</bean>



	<!-- Session Factory para Hibernate (solo una instancia por JVM) -->

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate.LocalSessionFactoryBean">

		<description>Session Factory para Hibernate (solo una instancia por
			JVM)</description>

		<property name="dataSource">

			<ref local="dataSource" />

		</property>

		<property name="configLocation">

			<value>classpath:hibernate.cfg.xml</value>

		</property>

		<property name="hibernateProperties">

			<props>

				<prop key="hibernate.show_sql">false</prop>

			</props>

		</property>

	</bean>



	<!-- Interceptor de Hibernate para la seguridad -->

	<bean id="seguridadInterceptor" class="com.ixe.ods.seguridad.hibernate.SeguridadInterceptor"
		singleton="false">

		<description>Interceptor de Hibernate para la seguridad</description>

	</bean>



	<!-- TransactionManager generico -->

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate.HibernateTransactionManager">

		<description>TransactionManager generico</description>

		<property name="sessionFactory">

			<ref local="sessionFactory" />

		</property>

		<property name="entityInterceptorBeanName">

			<value>seguridadInterceptor</value>

		</property>

	</bean>



	<!-- Interceptor de Hibernate para auditInterceptor -->

	<bean id="auditHibernateInterceptor"
		class="com.ixe.ods.seguridad.hibernate.ExposeHibernateInterceptor">

		<description>Interceptor de Hibernate para auditInterceptor</description>

		<property name="sessionFactory">

			<ref local="sessionFactory" />

		</property>

		<property name="entityInterceptorBeanName">

			<value>seguridadInterceptor</value>

		</property>

	</bean>



	<!-- Definicion general de un proxy que agrega transaccionalidad -->

	<bean id="baseTransactionProxy"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		abstract="true">

		<description>Definicion general de un proxy que agrega
			transaccionalidad</description>

		<property name="transactionManager">

			<ref bean="transactionManager" />

		</property>

		<property name="transactionAttributes">

			<props>

				<prop key="can*">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="*">PROPAGATION_REQUIRED</prop>

			</props>

		</property>

	</bean>



	<!-- DAO para acceso a la BUP -->

	<bean id="bupDao" class="com.ixe.ods.bup.sdo.impl.HibernateBupServiceData">

		<description>DAO para acceso a la BUP</description>

		<property name="sessionFactory">

			<ref local="sessionFactory" />

		</property>

		<property name="jdbcDao">

			<bean class="com.ixe.ods.bup.dao.impl.JdbcBupDaoImpl">

				<property name="dataSource">

					<ref bean="dataSource" />

				</property>

			</bean>

		</property>

	</bean>



	<!-- DAO para acceso a Seguridad -->

	<bean id="securityDao"
		class="com.ixe.ods.seguridad.sdo.impl.HibernateSeguridadServiceData">

		<description>DAO para acceso a Seguridad</description>

		<property name="sessionFactory">

			<ref local="sessionFactory" />

		</property>

	</bean>



	<!-- Proxy transaccional para las entidades de la BUP -->

	<bean id="bupServiceData" parent="baseTransactionProxy">

		<description>Proxy transaccional para las entidades de la BUP</description>

		<property name="target">

			<ref local="bupDao" />

		</property>

	</bean>

	<!-- Proxy transaccional para las entidades de Seguridad -->

	<bean id="securityServiceData" parent="baseTransactionProxy">

		<description>Proxy transaccional para las entidades de Seguridad</description>

		<property name="target">

			<ref local="securityDao" />

		</property>

	</bean>



	<!--
		Proxy transaccional usado por el middleware para las entidades de la
		BUP
	-->

	<bean id="bupMWServiceData"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">

		<description>Proxy transaccional para las entidades de la BUP</description>

		<property name="transactionManager">

			<ref bean="transactionManager" />

		</property>

		<property name="transactionAttributes">

			<props>

				<prop key="*">PROPAGATION_SUPPORTS</prop>

			</props>

		</property>

		<property name="target">

			<ref local="bupDao" />

		</property>

	</bean>



	<!--
		Definicion generica del proxy para los servicios transaccionales
	-->

	<bean id="transactionProxy"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		abstract="true">

		<description>Definicion generica del proxy para los servicios
			transaccionales</description>

		<property name="transactionManager">

			<ref bean="transactionManager" />

		</property>

		<property name="transactionAttributes">

			<props>

				<prop key="*">PROPAGATION_REQUIRED</prop>

			</props>

		</property>

	</bean>



	<!-- Servicios para facultades simples -->

	<bean id="facultyService" parent="transactionProxy" lazy-init="true">

		<description>Servicios para facultades simples</description>

		<property name="target">

			<bean class="com.ixe.ods.seguridad.services.impl.FacultadSimpleServiceImpl">

				<property name="seguridadDao">

					<ref local="securityDao" />

				</property>

				<property name="logFacultadQueueSender">

					<ref local="logFacultadQueueSender" />

				</property>

			</bean>

		</property>

	</bean>



	<!--
		bean id="ldapAuthentification" class="com.ixe.ods.sica.FakeLdap" /
	-->



	<bean id="ldapAuthentification"
		class="com.ixe.ods.seguridad.services.impl.LdapAutentificacionImpl">

		<description>Realiza la autentificacion por LDAP</description>

		<property name="ldapProvider">

			<value>ldap://15.128.25.17:9389/</value>
			<!--value>ldap://192.168.23.25:389/</value-->

		</property>

		<property name="ldapPrincipal">

			<value>, ou=People, o=ixecorp.ixe.com.mx</value>

		</property>

		<property name="ldapAlternative">

			<value>, ou=SpecialUsers, o=ixecorp.ixe.com.mx</value>

		</property>

	</bean>



	<bean id="numeroIntentosFallidos" class="java.lang.Integer">

		<description>Define el numero de intentos fallidos permitidos antes de
			bloquear el perfil.</description>

		<constructor-arg>

			<value>3</value>

		</constructor-arg>

	</bean>



	<!-- Servicios de login -->

	<bean id="loginService" parent="transactionProxy" lazy-init="true">

		<description>Servicios de login</description>

		<property name="target">

			<bean class="com.ixe.ods.seguridad.services.impl.LoginServiceImpl">

				<property name="ldapAutentificacion">

					<ref local="ldapAuthentification" />

				</property>

				<property name="seguridadDao">

					<ref local="securityDao" />

				</property>

				<property name="logFacultadQueueSender">

					<ref local="logFacultadQueueSender" />

				</property>

				<property name="numeroIntentosFallidos">

					<ref local="numeroIntentosFallidos" />

				</property>

			</bean>

		</property>

	</bean>



	<!-- Servicios para operaciones que dejan auditoria -->

	<bean id="auditService" parent="transactionProxy" lazy-init="true">

		<description>Servicios para operaciones que dejan auditoria</description>

		<property name="preInterceptors">

			<list>

				<!--
					<bean
					class="org.springframework.aop.interceptor.DebugInterceptor"/>
				-->

				<ref local="auditHibernateInterceptor" />

			</list>

		</property>

		<property name="target">

			<bean class="com.ixe.ods.seguridad.services.impl.AuditServiceImpl">

				<property name="ldapAutentificacion">

					<ref local="ldapAuthentification" />

				</property>

				<property name="seguridadDao">

					<ref local="securityDao" />

				</property>

				<property name="numeroIntentosFallidos">

					<ref local="numeroIntentosFallidos" />

				</property>

			</bean>

		</property>

	</bean>



	<!-- Servicios de ticket -->

	<bean id="ticketService" parent="transactionProxy" lazy-init="true">

		<description>Servicios de ticket</description>

		<property name="target">

			<bean class="com.ixe.ods.seguridad.services.impl.TicketServiceImpl">

				<property name="seguridadDao">

					<ref local="securityDao" />

				</property>

			</bean>

		</property>

	</bean>



	<!-- Servicios de usuario -->

	<bean id="userService" parent="transactionProxy" lazy-init="true">

		<description>Servicios de usuario</description>

		<property name="transactionAttributes">

			<props>

				<prop key="add*">PROPAGATION_REQUIRED</prop>

				<prop key="remove*">PROPAGATION_REQUIRED</prop>

				<prop key="getUsuario">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="getSistemasPorUsuario">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="is*">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="cambia*">PROPAGATION_REQUIRED</prop>

				<prop key="get*">PROPAGATION_REQUIRED</prop>

				<prop key="valida*">PROPAGATION_REQUIRED</prop>

			</props>

		</property>

		<property name="target">

			<bean class="com.ixe.ods.seguridad.services.impl.UsuarioServiceImpl">

				<property name="seguridadDao">

					<ref local="securityDao" />

				</property>

			</bean>

		</property>

	</bean>



	<!-- Servicios de autenticacion -->

	<bean id="authenticationService" parent="transactionProxy"
		lazy-init="true">

		<description>Servicios de autenticacion</description>

		<property name="target">

			<bean class="com.ixe.ods.seguridad.services.impl.AuthenticationServiceImpl">

				<property name="procedureDao">

					<bean class="com.ixe.ods.seguridad.dao.impl.ProcedureSecurityDaoImpl">

						<property name="dataSource">

							<ref bean="dataSource" />

						</property>

					</bean>

				</property>
				<property name="catalogoTokensDao">
					<bean class="com.ixe.ods.seguridad.dao.impl.CatalogoTokensDaoImpl">
						<property name="dataSource">
							<ref bean="dataSource" />
						</property>
					</bean>
				</property>
			</bean>

		</property>

	</bean>



	<!-- ConnectionFactory para JMS -->

	<bean id="connectionFactory" class="org.springframework.jndi.JndiObjectFactoryBean"
		lazy-init="true">

		<description>ConnectionFactory para JMS</description>

		<property name="jndiName">

			<value>jms/QCF</value>

		</property>

	</bean>



	<!--
		Servicio encargado de enviar mensajes a la cola de facultades simples
	-->

	<bean id="logFacultadQueueSender"
		class="com.ixe.ods.seguridad.jms.impl.LogFacultadQueueSenderImpl"
		lazy-init="true">

		<description>Servicio encargado de enviar mensajes a la cola de
			facultades simples</description>

		<property name="connectionFactory">

			<ref local="connectionFactory" />

		</property>

		<property name="queueJndiName">

			<value>jms/SEGULOGFAC</value>

		</property>

	</bean>



	<!--
		Servicio encargado de enviar mensajes a la cola de facultades cuenta
	-->

	<bean id="logFacultadCuentaQueueSender"
		class="com.ixe.ods.seguridad.jms.impl.LogFacultadQueueSenderImpl"
		lazy-init="true">

		<description>Servicio encargado de enviar mensajes a la cola de
			facultades cuenta</description>

		<property name="connectionFactory">

			<ref local="connectionFactory" />

		</property>

		<property name="queueJndiName">

			<value>jms/SEGULOGCTA</value>

		</property>

	</bean>



	<!--
		Servicio encargado de enviar mensajes a la cola de autorizaciones
		mancomunadas
	-->

	<bean id="logAutMancomunadaQueueSender"
		class="com.ixe.ods.seguridad.jms.impl.LogFacultadQueueSenderImpl"
		lazy-init="true">

		<description>Servicio encargado de enviar mensajes a la cola de
			autorizaciones mancomunadas</description>

		<property name="connectionFactory">

			<ref local="connectionFactory" />

		</property>

		<property name="queueJndiName">

			<value>jms/SEGULOGAUTMANC</value>

		</property>

	</bean>



	<!-- Servicios de perfil -->

	<bean id="profileService" parent="transactionProxy" lazy-init="true">

		<description>Servicios de perfil</description>

		<property name="target">

			<bean class="com.ixe.ods.seguridad.services.impl.PerfilServiceImpl">

				<property name="seguridadDao">

					<ref local="securityDao" />

				</property>

				<property name="bupDao">

					<ref local="bupDao" />

				</property>

				<property name="logFacultadCuentaQueueSender">

					<ref local="logFacultadCuentaQueueSender" />

				</property>

				<property name="logAutMancomunadaQueueSender">

					<ref local="logAutMancomunadaQueueSender" />

				</property>

			</bean>

		</property>

	</bean>



	<!-- DAO para recurrencias -->

	<bean id="recurrenciasDao"
		class="com.ixe.ods.recurrencias.sdo.impl.HibernateRecurrenciasServiceData">

		<description>DAO para recurrencias</description>

		<property name="sessionFactory">

			<ref local="sessionFactory" />

		</property>

	</bean>



	<!-- Proxy para las entidades relacionadas con recurrencias -->

	<bean id="recurrenciasServiceData" parent="baseTransactionProxy">

		<description>Proxy para las entidades relacionadas con recurrencias</description>

		<property name="target">

			<ref local="recurrenciasDao" />

		</property>

	</bean>


    <!-- Apagado de Phoenix -->
	<!-- bean id="nominaPhoenixDaoTarget" class="com.ixe.ods.ixenet.nomina.dao.impl.PhoenixNominaDaoImpl">

		<property name="phoenixTemplate">

			<ref bean="phoenixTemplate" />

		</property>

	</bean>



	<bean id="nominaPhoenixDao" parent="baseTransactionProxyNomina">

		<property name="target">

			<ref local="nominaPhoenixDaoTarget" />

		</property>

	</bean>



	<bean id="phoenixTemplate" class="org.springframework.jdbc.core.JdbcTemplate">

		<property name="dataSource">

			<ref local="phoenixDataSource" />

		</property>

	</bean>



	<bean id="phoenixDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">

		<description>Data source para Alertas en Sybase</description>

		<property name="jndiName">

			<value>PhoenixDataSource</value>

		</property>

	</bean-->



	<!-- Configuracion de Ixe-Nomina IDS-->



	<bean id="baseTransactionProxyNomina"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		abstract="true">

		<property name="transactionManager" ref="jtaTransactionManager" />

		<property name="transactionAttributes">

			<props>



				<prop key="agrega*">PROPAGATION_REQUIRED,-NominaRuntimeException</prop>

				<prop key="asociarCuentaExistente">PROPAGATION_REQUIRED,-NominaException</prop>

				<prop key="associateEmployeeAccount">PROPAGATION_REQUIRED,-NominaRuntimeException</prop>

				<prop key="bajaEmpleado">PROPAGATION_REQUIRED,-NominaException,-NominaRuntimeException</prop>

				<prop key="buscarEmpleadosPor*">PROPAGATION_REQUIRED,readOnly,timeout_300,-ContratacionException,-NominaRuntimeException</prop>

				<prop key="cambiaProductoCuenta">PROPAGATION_NOT_SUPPORTED,-NominaRuntimeException</prop>

				<prop key="cargaNomina">PROPAGATION_REQUIRED,readOnly,-NominaRuntimeException</prop>

				<prop key="crearCuenta">PROPAGATION_NOT_SUPPORTED,-BankServiceException,
					-NominaException, -SeguridadException</prop>

				<prop key="delet*">PROPAGATION_REQUIRED,-NominaRuntimeException</prop>

				<prop key="elimina*">PROPAGATION_REQUIRED,-NominaRuntimeException</prop>

				<prop key="establecerCuentaDefault">PROPAGATION_REQUIRED,-NominaException</prop>

				<prop key="findAccountsByIdEmpresa">PROPAGATION_REQUIRED,readOnly,-NominaRuntimeException</prop>

				<prop key="findComisionesByNoCuenta">PROPAGATION_REQUIRED,readOnly,-HibernateSystemException,
					-NominaRuntimeException</prop>

				<prop key="findCuenta*">PROPAGATION_REQUIRED,readOnly,-NominaRuntimeException</prop>

				<prop key="findDatosSucursalByCuenta">PROPAGATION_REQUIRED,readOnly,-NominaRuntimeException</prop>

				<prop key="findEmpleado*">PROPAGATION_REQUIRED,readOnly,timeout_300,-NominaRuntimeException</prop>

				<prop key="findEmpresaByAccount">PROPAGATION_REQUIRED,readOnly,-NominaRuntimeException,
					-DataAccessResourceFailureException, -HibernateException,
					-IllegalStateException</prop>

				<prop key="findEmpresaByNoCuenta">PROPAGATION_NOT_SUPPORTED,timeout_300,-NominaRuntimeException</prop>

				<prop key="findEmpresas*">PROPAGATION_REQUIRED,readOnly,-NominaRuntimeException</prop>

				<prop key="findEntidadFederativa">PROPAGATION_REQUIRED,readOnly,-NominaRuntimeException</prop>

				<prop key="findFechaInhabil">PROPAGATION_REQUIRED,readOnly,-NominaRuntimeException</prop>

				<prop key="findNominas">PROPAGATION_REQUIRED,-NominaRuntimeException</prop>

				<prop key="findNominas*">PROPAGATION_REQUIRED,readOnly,-NominaRuntimeException</prop>

				<prop key="findPagoCalendarizad*">PROPAGATION_REQUIRED,readOnly,-NominaRuntimeException</prop>

				<prop key="findPagoLine*">PROPAGATION_REQUIRED,readOnly,-NominaRuntimeException</prop>

				<prop key="findPagosBy*">PROPAGATION_REQUIRED,readOnly,-NominaRuntimeException</prop>

				<prop key="findPagosEnEsperaByIdNomina">PROPAGATION_REQUIRED,readOnly,-NominaRuntimeException</prop>

				<prop key="findPagosRegProg">PROPAGATION_REQUIRED,readOnly,-NominaRuntimeException</prop>

				<prop key="findPersonaMora*">PROPAGATION_REQUIRED,readOnly,-NominaRuntimeException</prop>

				<prop key="findRepetirPago">PROPAGATION_REQUIRED,readOnly,-NominaRuntimeException</prop>

				<prop key="findTipoCuentaAndRIMByNoCuenta">PROPAGATION_REQUIRED,readOnly,-NominaRuntimeException</prop>

				<prop key="getAcctInfo">PROPAGATION_REQUIRED,readOnly,-NominaRuntimeException</prop>

				<prop key="getCorrelacionProductos">PROPAGATION_REQUIRED,readOnly,-NominaRuntimeException</prop>

				<prop key="getCountBupPersonaDoc">PROPAGATION_REQUIRED,readOnly,-ContratacionException</prop>

				<prop key="getDatosRequeridoTipoPersona">PROPAGATION_REQUIRED,readOnly,-ContratacionException</prop>

				<prop key="getIdTipoDocumento">PROPAGATION_REQUIRED, readOnly,
					-ContratacionException</prop>

				<prop key="getIntegerParameterValue">PROPAGATION_NOT_SUPPORTED,-NominaRuntimeException</prop>

				<prop key="getNextPtidAcctCc">PROPAGATION_REQUIRED,readOnly,-NominaRuntimeException</prop>

				<prop key="getNomin*">PROPAGATION_REQUIRED,readOnly,-NominaRuntimeException</prop>

				<prop key="getParametro">PROPAGATION_NOT_SUPPORTED,-NominaRuntimeException</prop>

				<prop key="getParametrosCreacionTarjetaCorreo">PROPAGATION_REQUIRED,-NominaException</prop>

				<prop key="getPersonaEnListaNegra">PROPAGATION_REQUIRED,readOnly,-ContratacionException</prop>

				<prop key="getRimTipoCuenta">PROPAGATION_REQUIRED,readOnly,-NominaRuntimeException</prop>

				<prop key="getSiguienteDiaHabil">PROPAGATION_REQUIRED,readOnly,-NominaException</prop>

				<prop key="guardaPagoSinFirmaAutorizacion">PROPAGATION_REQUIRED,-NominaException</prop>

				<prop key="isPersonaEnListaNegra">PROPAGATION_REQUIRED, readOnly,
					-ContratacionException</prop>

				<prop key="isTelefonoExistente">PROPAGATION_NOT_SUPPORTED</prop>

				<prop key="modificaEmpleado">PROPAGATION_REQUIRED,-NominaRuntimeException</prop>

				<prop key="modificaNomina">PROPAGATION_REQUIRED,-NominaRuntimeException</prop>

				<prop key="modificaPago">PROPAGATION_REQUIRED,-NominaRuntimeException</prop>

				<prop key="modificarCuentaEmpleado">PROPAGATION_REQUIRED,readOnly,-NominaException</prop>

				<prop key="modificarEstatus">PROPAGATION_REQUIRED,-NominaException,-NominaRuntimeException</prop>

				<prop key="modificaTipoCuenta">PROPAGATION_NOT_SUPPORTED,-NominaException</prop>

				<prop key="montoNomina">PROPAGATION_REQUIRED,readOnly,-NominaRuntimeException</prop>

				<prop key="nextBusinessDate">PROPAGATION_NOT_SUPPORTED</prop>

				<prop key="nuevaNomina">PROPAGATION_REQUIRED,-NominaRuntimeException</prop>

				<prop key="obtainCatalogs">PROPAGATION_REQUIRED,readOnly,-NominaException</prop>

				<prop key="obtener*">PROPAGATION_REQUIRED,readOnly,-NominaException,-NominaRuntimeException</prop>

				<prop key="realizaPagosNomina">PROPAGATION_REQUIRED,-NominaException</prop>

				<prop key="registraDireccion">PROPAGATION_REQUIRED, -ContratacionException</prop>

				<prop key="registraPersona">PROPAGATION_REQUIRED, -ContratacionException</prop>

				<prop key="registrarAltaMasivaEmpleados">PROPAGATION_NOT_SUPPORTED,-NominaRuntimeException</prop>

				<prop key="registrarEmpleado">PROPAGATION_REQUIRED,-ContratacionException,
					-NominaException, -Exception</prop>

				<prop key="registraTelefono">PROPAGATION_REQUIRED, -ContratacionException</prop>

				<prop key="salvaPagoEsquemaFirmasNoCompletado">PROPAGATION_NOT_SUPPORTED</prop>

				<prop key="saveBup*">PROPAGATION_REQUIRED,-ContratacionException</prop>

				<prop key="store">PROPAGATION_REQUIRED,-NominaRuntimeException</prop>

				<prop key="transfiereACuenta">PROPAGATION_NOT_SUPPORTED</prop>

				<prop key="translateCuentaContrato">PROPAGATION_REQUIRED,-NominaException</prop>

				<prop key="translateCuentaContratoBup2ODS">PROPAGATION_REQUIRED,readOnly,-NominaRuntimeException</prop>

				<prop key="update">PROPAGATION_REQUIRED,-NominaRuntimeException</prop>

				<prop key="updateAcctType">PROPAGATION_NOT_SUPPORTED,-NominaRuntimeException</prop>

				<prop key="updateDefaultAccount">PROPAGATION_REQUIRED,-NominaRuntimeException</prop>

				<prop key="updateStatus">PROPAGATION_REQUIRED,-NominaRuntimeException</prop>

				<prop key="validaCuentaEmpleado">PROPAGATION_REQUIRED,readOnly,-NominaRuntimeException</prop>

				<prop key="validaPersona">PROPAGATION_REQUIRED,readOnly, -ContratacionException</prop>

				<prop key="validaTelefono">PROPAGATION_NOT_SUPPORTED</prop>



				<prop key="findEntidadesFederativas">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="findTiposIdentificacion">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="estadoCivilExists">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="findNacionalidades">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="findEstadosCiviles">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="findPaisByIdPersona">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="findUsuarioById">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="findNombreUsuarioByClaveUsuario">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="findRazonSocialByIdEmpresa">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="findNumNominaEmpByIdEmpleado">PROPAGATION_REQUIRED,readOnly</prop>

				<prop key="findIDEmpleadoByNoCuenta">PROPAGATION_REQUIRED,readOnly</prop>

			</props>

		</property>

	</bean>



	<!-- Transaction manager para jta -->

	<bean id="jtaTransactionManager"
		class="org.springframework.transaction.jta.WebLogicJtaTransactionManager">

		<description>TransactionManager JTA de Weblogic</description>

	</bean>





















	<!-- Servicio de cancelacion de recurrencias-->

	<bean id="recurrenciasService" parent="baseTransactionProxy">

		<description>Servicio de cancelacion de recurrencias y excepciones</description>

		<property name="target">

			<bean class="com.ixe.ods.recurrencias.service.impl.RecurrenciasServiceImpl">

				<property name="serviceData">

					<ref local="recurrenciasDao" />

				</property>

			</bean>

		</property>

	</bean>







	<!--
		Proxy para accesar al ejb del middleware de DigitalSignature para
		operaciones que utilicen certificado Digital.
	-->

	<bean id="digitalSignatureService"
		class="org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean"
		lazy-init="true">

		<description>Proxy para accesar al ejb del DigitalSignature para
			Empresarial</description>

		<property name="jndiName">

			<value>ejb/middleware/DigitalSignatureHome</value>

		</property>

		<property name="businessInterface">

			<value>com.ixe.mw.banco.sdo.DigitalSignatureService</value>

		</property>

	</bean>

	<bean id="jdbcBupDao" class="com.ixe.ods.bup.dao.impl.JdbcBupDaoImpl">
		<description>DAO para acceso directo a la BUP via JDBC</description>
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>



</beans>
